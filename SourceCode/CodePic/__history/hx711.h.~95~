#ifndef HX711_H
#define HX711_H

#include <math.h> // Bao g?m thu vi?n math.h d? s? d?ng hàm fabs()

// HX711 Pin Definitions
#define HX711_DT_PIN PIN_A0
#define HX711_SCK_PIN PIN_A1

// Global variables for offset and scale
long OFFSET = 0;
// Ð?t SCALE v? 1.0. Giá tr? này s? du?c tính toán l?i b?i hx711_calibrate()
double SCALE = 1.0;

// Ngu?ng nhi?u cho giá tr? RAW
// Gi? nguyên 100.
#define HX711_RAW_NOISE_THRESHOLD 100

// Ngu?ng làm tròn v? 0 cho giá tr? tr?ng lu?ng cu?i cùng (gram)
// N?u giá tr? tuy?t d?i c?a tr?ng lu?ng nh? hon ngu?ng này, nó s? du?c d?t v? 0.
// Tang ngu?ng này lên 15g d? bao ph? các giá tr? nh?y ng?u nhiên l?n hon.
#define HX711_FINAL_ZERO_THRESHOLD 15.0f // Ðã tang ngu?ng lên 15g

// S? lu?ng l?n d?c liên ti?p c?n thi?t d? xác nh?n tr?ng thái "0g ?n d?nh"
// V?i HX711_INTERVAL_TICKS là 20 (100ms) và delay 5ms ? main loop,
// M?i l?n d?c HX711 là 100ms. N?u ZERO_STABILITY_COUNT là 20,
// thì c?n 20 * 100ms = 2 giây d? xác nh?n v? 0g.
// Tang giá tr? này d? d?m b?o ?n d?nh hon.
#define HX711_ZERO_STABILITY_COUNT 20

// Ngu?ng d? thoát kh?i tr?ng thái 0g và b?t d?u do tr?ng lu?ng th?c t?.
// V?t ph?i có tr?ng lu?ng l?n hon ngu?ng này d? du?c coi là "d?t v?t m?i".
// Ð?t ngu?ng này cao hon HX711_FINAL_ZERO_THRESHOLD m?t chút.
#define HX711_WEIGHT_DETECTION_THRESHOLD 20.0f // Ví d?: 20g d? phát hi?n v?t m?i

// Bi?n tr?ng thái d? theo dõi s? ?n d?nh c?a 0g
static int8 zero_stable_counter = HX711_ZERO_STABILITY_COUNT; // Kh?i t?o ban d?u là "?n d?nh ? 0"
static int1 is_currently_zeroed = TRUE; // C? cho bi?t cân dang b? "khóa" ? 0g

// Function to read raw data from HX711
unsigned int32 readCount(void) {
   unsigned int32 data = 0;
   unsigned int8 j;

   output_bit(HX711_SCK_PIN, 0);

   while (input(HX711_DT_PIN)); // Ch? HX711 s?n sàng (DT ? m?c th?p)

   for (j = 0; j < 24; j++) {
      output_bit(HX711_SCK_PIN, 1);
      delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh
      data = data << 1;
      output_bit(HX711_SCK_PIN, 0);
      delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh
      if (input(HX711_DT_PIN)) {
         data++;
      }
   }

   output_bit(HX711_SCK_PIN, 1);
   delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh
   data = data ^ 0x800000; // Chuy?n d?i t? bù 2 sang s? nguyên có d?u
   output_bit(HX711_SCK_PIN, 0);
   delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh

   return data;
}

// Function to read average raw value
int32 readAverage(void) {
   unsigned int32 sum = 0;
   int8 k;

   for (k = 0; k < 50; k++) { // Tang s? m?u trung bình d? ?n d?nh hon (t? 30 lên 50)
      sum += readCount();
      delay_us(50); // Gi? delay này d? tránh quá t?i
   }
   return sum / 50;
}

// Function to get value (raw - offset)
long hx711_get_value(int8 times) {
   long raw_value = readAverage();
   long delta = raw_value - OFFSET;

   // Lo?i b? nhi?u c?c nh?, nhung không ép v? 0 ? dây
   if (delta < HX711_RAW_NOISE_THRESHOLD && delta > -HX711_RAW_NOISE_THRESHOLD) {
       // Không ép v? 0 ? dây d? hx711_get_units có d? d? li?u d? dánh giá s? ?n d?nh
   }
   return delta;
}

// Function to get weight in grams
float hx711_get_units(int8 times) {
   float value_raw = (float)hx711_get_value(times);

   if (SCALE == 0) return 0;
   value_raw = value_raw / SCALE;

   // Bu?c 1: Quy?t d?nh xem có v?t m?i du?c d?t lên hay không (thoát kh?i tr?ng thái 0g)
   if (is_currently_zeroed == TRUE) {
       // N?u cân dang ? tr?ng thái 0g, chúng ta ch? thoát kh?i nó khi phát hi?n m?t tr?ng lu?ng dáng k?
       if (fabs(value_raw) >= HX711_WEIGHT_DETECTION_THRESHOLD) {
           is_currently_zeroed = FALSE; // Thoát kh?i tr?ng thái 0g
           zero_stable_counter = 0; // Reset b? d?m ?n d?nh
           // Sau khi phát hi?n v?t, nên d?c l?i OFFSET d? tare l?i n?u c?n, ho?c gi? s? offset không thay d?i nhi?u
           // Ho?c ch? don gi?n là hi?n th? giá tr? hi?n t?i
           if (value_raw < 0) return 0; // V?n d?m b?o không hi?n th? s? âm khi phát hi?n v?t
           return value_raw;
       } else {
           return 0; // V?n gi? ? 0g
       }
   }
   // Bu?c 2: N?u không ph?i ? tr?ng thái 0g dã khóa, hãy do lu?ng bình thu?ng
   else {
       // N?u giá tr? hi?n t?i n?m trong ngu?ng 0g (t?c là v?t có th? dã du?c nh?c ra)
       if (fabs(value_raw) < HX711_FINAL_ZERO_THRESHOLD) {
           if (zero_stable_counter < HX711_ZERO_STABILITY_COUNT) {
               zero_stable_counter++; // Tang b? d?m ?n d?nh
           }
           // N?u dã d?t d? s? l?n d?c ?n d?nh ? 0, thì ép v? 0 và khóa l?i
           if (zero_stable_counter >= HX711_ZERO_STABILITY_COUNT) {
               is_currently_zeroed = TRUE; // Khóa ? 0g
               return 0.0f;
           } else {
               // V?n dang trong quá trình d?m, tr? v? giá tr? hi?n t?i (d?m b?o không âm)
               if (value_raw < 0) return 0;
               return value_raw;
           }
       } else {
           // Giá tr? hi?n t?i KHÔNG n?m trong ngu?ng 0g (v?t v?n dang ? trên cân)
           zero_stable_counter = 0; // Reset b? d?m ?n d?nh
           if (value_raw < 0) return 0; // Ð?m b?o không tr? v? giá tr? âm
           return value_raw; // Tr? v? giá tr? th?c
       }
   }
}

// Function to tare (set current weight as zero)
void hx711_tare(int8 times) {
   OFFSET = readAverage();
   is_currently_zeroed = TRUE; // Sau khi tare, coi nhu dã ?n d?nh ? 0g và khóa l?i
   zero_stable_counter = HX711_ZERO_STABILITY_COUNT; // Ð?t b? d?m ?n d?nh v? ngu?ng
}

// Function to set the scale factor manually
void hx711_set_scale(double scale) {
   SCALE = scale;
}

// Function to calibrate the HX711 with a known weight
void hx711_calibrate(float known_weight) {
   if (known_weight <= 0) return;

   long raw_value_with_weight = readAverage();
   long delta_raw = raw_value_with_weight - OFFSET;

   if (delta_raw != 0) {
      SCALE = (double)delta_raw / known_weight;
   }
   // Sau khi hi?u chu?n, chúng ta không t? d?ng v? 0g vì có th? v?t v?n dang ? trên cân
   // is_currently_zeroed không thay d?i ? dây, nó s? du?c quy?t d?nh b?i hx711_get_units
}

#endif // HX711_H
