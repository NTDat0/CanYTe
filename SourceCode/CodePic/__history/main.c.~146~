#include <16F877A.h>
#fuses HS,NOWDT,NOPROTECT,NOLVP
#use delay(clock=8000000)
#use fast_io(D)
#use fast_io(C)
#use fast_io(B)
#use standard_io(A)

#include "lcd.h"
#include "max30102.h"
#include "dht11.h"
#include "hx711.h"
#include "uart.h"

// Hi?n th? s? trên LCD (h? tr? 2, 3, ho?c 5 ch? s?)
void display_number(int32 num, int8 pos, int8 digits) {
   if (num > 99 && digits == 2) num = 99; // Gi?i h?n 2 ch? s? cho T, H
   if (num > 999 && digits == 3) num = 999; // Gi?i h?n 3 ch? s? cho HR, SpO2
   if (num > 99999 && digits == 5) num = 99999; // Gi?i h?n 5 ch? s? cho cân n?ng

   LCD_SetPosition(pos);
   if (digits == 2) {
      LCD_PutChar(num / 10 + '0'); // Ch? s? hàng ch?c
      LCD_PutChar(num % 10 + '0'); // Ch? s? hàng don v?
   } else if (digits == 3) {
      if (num >= 100) {
         LCD_PutChar(num / 100 + '0');
         LCD_PutChar((num % 100) / 10 + '0');
         LCD_PutChar(num % 10 + '0');
      } else if (num >= 10) {
         LCD_PutChar(' ');
         LCD_PutChar(num / 10 + '0');
         LCD_PutChar(num % 10 + '0');
      } else {
         LCD_PutChar(' ');
         LCD_PutChar(' ');
         LCD_PutChar(num + '0');
      }
   } else if (digits == 5) {
      if (num >= 10000) {
         LCD_PutChar(num / 10000 + '0');
         LCD_PutChar((num % 10000) / 1000 + '0');
         LCD_PutChar((num % 1000) / 100 + '0');
         LCD_PutChar((num % 100) / 10 + '0');
         LCD_PutChar(num % 10 + '0');
      } else if (num >= 1000) {
         LCD_PutChar(' ');
         LCD_PutChar(num / 1000 + '0');
         LCD_PutChar((num % 1000) / 100 + '0');
         LCD_PutChar((num % 100) / 10 + '0');
         LCD_PutChar(num % 10 + '0');
      } else if (num >= 100) {
         LCD_PutChar(' ');
         LCD_PutChar(' ');
         LCD_PutChar(num / 100 + '0');
         LCD_PutChar((num % 100) / 10 + '0');
         LCD_PutChar(num % 10 + '0');
      } else if (num >= 10) {
         LCD_PutChar(' ');
         LCD_PutChar(' ');
         LCD_PutChar(' ');
         LCD_PutChar(num / 10 + '0');
         LCD_PutChar(num % 10 + '0');
      } else {
         LCD_PutChar(' ');
         LCD_PutChar(' ');
         LCD_PutChar(' ');
         LCD_PutChar(' ');
         LCD_PutChar(num + '0');
      }
   }
   delay_us(20);
}

void main() {
   set_tris_d(0x00); // LCD trên PORTD (output)
   set_tris_c(0x00); // PORTC cho I2C (MAX30102)
   set_tris_b(0xFF); // PORTB làm input (cho DHT11)
   set_tris_a(0x01); // A0 làm input cho HX711 DT, A1 làm output cho HX711 SCK

   // Kh?i t?o các module
   LCD_Init();
   delay_ms(50);
   max30102_init();
   uart_init();

   // Ð?t l?i giá tr? MAX30102 v? 0 khi kh?i d?ng
   hr_value = 0;
   spo2_value = 0;
   finger_detected = 0;
   hr_update_counter = 0;
   spo2_update_counter = 0;

   // B? qua các giá tr? HX711 ban d?u d? ?n d?nh
   for (int i = 0; i < 5; i++) {
      readCount();
      delay_ms(10);
   }
   // Tare ban d?u
   hx711_tare(1);

   // Hi?n th? nhãn tinh v?i don v?
   LCD_SetPosition(LINE_1); // Dòng 1: Nhi?t d? và Ð? ?m
   LCD_PutChar('T'); LCD_PutChar(':'); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar('C'); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar('H'); LCD_PutChar(':'); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar('%');
   LCD_SetPosition(LINE_2); // Dòng 2: Nh?p tim
   LCD_PutChar('H'); LCD_PutChar('R'); LCD_PutChar(':'); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar('b'); LCD_PutChar('p'); LCD_PutChar('m');
   LCD_SetPosition(LINE_3); // Dòng 3: SpO2
   LCD_PutChar('S'); LCD_PutChar('p'); LCD_PutChar('O'); LCD_PutChar('2'); LCD_PutChar(':'); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar('%');
   LCD_SetPosition(LINE_4); // Dòng 4: Cân n?ng (gram)
   LCD_PutChar('W'); LCD_PutChar('e'); LCD_PutChar('i'); LCD_PutChar('g'); LCD_PutChar('h'); LCD_PutChar('t'); LCD_PutChar(':'); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar(' '); LCD_PutChar('g');

   // Bi?n luu giá tr? c?m bi?n
   unsigned int8 temp = 0;
   unsigned int8 hum = 0;
   int32 weight_grams = 0;

   // B? d?m cho c?p nh?t và truy?n d? li?u
   int8 update_counter = 0; // C?p nh?t t?t c? c?m bi?n và truy?n m?i 250ms

   while (TRUE) {
      if (update_counter == 0) {
         // Ð?c t?t c? c?m bi?n trong cùng m?t chu k?
         max30102_read_and_display(); // Ð?c nh?p tim và SpO2
         dht11_read(&temp, &hum); // Ð?c nhi?t d? và d? ?m
         weight_grams = (int32)hx711_get_units(1); // Ð?c cân n?ng
         if (weight_grams < 0) weight_grams = 0; // Ð?m b?o cân n?ng không âm

         // C?p nh?t LCD
         display_number(temp, LINE_1 + 3, 2);
         display_number(hum, LINE_1 + 10, 2);
         display_number(hr_value, LINE_2 + 3, 3);
         display_number(spo2_value, LINE_3 + 5, 3);
         display_number(weight_grams, LINE_4 + 7, 5);

         // G?i t?t c? giá tr? c?m bi?n không b?ng 0 qua UART
         uart_send_data(temp, hum, hr_value, spo2_value, weight_grams);
      }

      update_counter = (update_counter + 1) % 50; // Chu k? 250ms (50 * 5ms)
      delay_ms(5); // Chu k? co b?n 5ms
   }
}
