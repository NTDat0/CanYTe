#ifndef HX711_H
#define HX711_H

// HX711 Pin Definitions
#define HX711_DT_PIN PIN_A0
#define HX711_SCK_PIN PIN_A1

// Global variables for offset and scale
long OFFSET = 0;
double SCALE = 377.0; // Gi? nguyên SCALE = 377.0 d? s?a 38g d?c thành 41g

// Function to read raw data from HX711
unsigned int32 readCount(void) {
   unsigned int32 data = 0;
   unsigned int8 j;

   output_bit(HX711_DT_PIN, 1);
   output_bit(HX711_SCK_PIN, 0);

   while (input(HX711_DT_PIN));
   for (j = 0; j < 24; j++) {
      output_bit(HX711_SCK_PIN, 1);
      data = data << 1;
      output_bit(HX711_SCK_PIN, 0);
      if (input(HX711_DT_PIN)) {
         data++;
      }
   }
   output_bit(HX711_SCK_PIN, 1);
   data = data ^ 0x800000;
   output_bit(HX711_SCK_PIN, 0);
   return data;
}

// Function to read average raw value
int32 readAverage(void) {
   unsigned int32 sum = 0;
   int8 k; // S? d?ng int8 thay vì int d? ti?t ki?m b? nh?

   for (k = 0; k < 30; k++) { // Gi?m t? 50 xu?ng 30 m?u d? tránh l?i "Data item too big"
      sum += readCount();
   }
   return sum / 30;
}

// Function to get value (raw - offset)
long hx711_get_value(int8 times) {
   long raw_value = readAverage();
   long delta = raw_value - OFFSET;
   if (delta < 300 && delta > -300) delta = 0; // Gi? ngu?ng nhi?u ±300
   return delta;
}

// Function to get weight in grams
float hx711_get_units(int8 times) {
   float value = (float)hx711_get_value(times) / SCALE;
   if (value < 0) value = 0; // Ð?m b?o không âm
   if (value > 99999) value = 99999; // Gi?i h?n 5 ch? s?
   return value;
}

// Function to tare (set offset)
void hx711_tare(int8 times) {
   OFFSET = readAverage();
}

// Function to set scale factor
void hx711_set_scale(double scale) {
   SCALE = scale;
}

// Function to calibrate scale with a known weight
void hx711_calibrate(float known_weight) {
   if (known_weight <= 0) return; // Ngan chia cho 0
   hx711_tare(10); // Tare tru?c khi hi?u chu?n
   long raw_value = readAverage();
   SCALE = (float)(raw_value - OFFSET) / known_weight;
}

#endif
