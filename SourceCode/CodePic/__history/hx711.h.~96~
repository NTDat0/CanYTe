#ifndef HX711_H
#define HX711_H

#include <math.h> // Bao g?m thu vi?n math.h d? s? d?ng hàm fabs()

// HX711 Pin Definitions
#define HX711_DT_PIN PIN_A0
#define HX711_SCK_PIN PIN_A1

// Global variables for offset and scale
long OFFSET = 0;
double SCALE = 1.0; // Ð?t SCALE v? 1.0. Giá tr? này s? du?c tính toán l?i b?i hx711_calibrate()

// Ngu?ng nhi?u cho giá tr? RAW
// Gi? nguyên 100, ch? dùng d? l?c nhi?u nh? trong tín hi?u thô.
#define HX711_RAW_NOISE_THRESHOLD 100

// Ngu?ng tr?ng lu?ng t?i da cho phép khi cân ? tr?ng thái không t?i
// B?t k? giá tr? nào tuy?t d?i l?n hon ngu?ng này s? KHÔNG du?c coi là 0g.
// Ví d?: 30g. N?u d?c du?c 200g, nó s? không bao gi? b? ép v? 0 b?i ngu?ng này.
#define HX711_ABSOLUTE_ZERO_THRESHOLD 30.0f // Ngu?ng này cao hon FINAL_ZERO, ngan ch?n các giá tr? l?n b? ép v? 0

// Ngu?ng giá tr? d? xác d?nh cân dã "g?n" 0g
// N?u giá tr? tuy?t d?i c?a tr?ng lu?ng nh? hon ngu?ng này, nó s? du?c d?m d? v? 0.
#define HX711_NEAR_ZERO_THRESHOLD 10.0f // Ví d?: 10g

// S? lu?ng l?n d?c liên ti?p c?n thi?t d? xác nh?n tr?ng thái "0g ?n d?nh"
// Tang giá tr? này d? d?m b?o ?n d?nh hon. Ví d?: 30 l?n d?c = 3 giây (n?u m?i l?n d?c 100ms)
#define HX711_STABLE_ZERO_COUNT 30

// Ngu?ng d? thoát kh?i tr?ng thái 0g và b?t d?u do tr?ng lu?ng th?c t?.
// V?t ph?i có tr?ng lu?ng l?n hon ngu?ng này d? du?c coi là "d?t v?t m?i".
// Ð?t ngu?ng này cao hon HX711_NEAR_ZERO_THRESHOLD.
#define HX711_OBJECT_DETECTION_THRESHOLD 50.0f // Ví d?: 50g d? ch?c ch?n có v?t m?i

// Bi?n tr?ng thái c?a HX711
typedef enum {
    HX711_STATE_UNKNOWN,        // Tr?ng thái ban d?u ho?c không xác d?nh
    HX711_STATE_ZEROED,         // Cân dang du?c coi là 0g và b? khóa ? 0
    HX711_STATE_MEASURING,      // Cân dang do lu?ng tr?ng lu?ng
    HX711_STATE_SETTLING_TO_ZERO // Cân dang trong quá trình ?n d?nh d? v? 0
} hx711_status_t;

static hx711_status_t hx711_current_state = HX711_STATE_UNKNOWN;
static int8 zero_stability_counter = 0; // B? d?m cho tr?ng thái Settling_To_Zero

// Hàm d?c d? li?u thô t? HX711
unsigned int32 readCount(void) {
   unsigned int32 data = 0;
   unsigned int8 j;

   output_bit(HX711_SCK_PIN, 0);

   // Ch? HX711 s?n sàng (DT ? m?c th?p)
   // B? sung timeout d? tránh b? treo n?u DT luôn ? m?c cao
   unsigned int16 timeout = 0;
   while (input(HX711_DT_PIN)) {
       delay_us(1);
       timeout++;
       if (timeout > 5000) return 0; // Timeout sau 5ms, tr? v? 0 d? không b? treo
   }

   for (j = 0; j < 24; j++) {
      output_bit(HX711_SCK_PIN, 1);
      delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh
      data = data << 1;
      output_bit(HX711_SCK_PIN, 0);
      delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh
      if (input(HX711_DT_PIN)) {
         data++;
      }
   }

   output_bit(HX711_SCK_PIN, 1);
   delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh
   data = data ^ 0x800000; // Chuy?n d?i t? bù 2 sang s? nguyên có d?u
   output_bit(HX711_SCK_PIN, 0);
   delay_us(1); // QUAN TR?NG: Ð?m b?o delay này d? HX711 ho?t d?ng ?n d?nh

   return data;
}

// Hàm d?c giá tr? trung bình thô
int32 readAverage(void) {
   unsigned int32 sum = 0;
   int8 k;
   int8 valid_reads = 0;

   for (k = 0; k < 50; k++) { // Tang s? m?u trung bình d? ?n d?nh hon
      unsigned int32 current_read = readCount();
      if (current_read != 0) { // Ch? c?ng vào n?u không ph?i timeout
          sum += current_read;
          valid_reads++;
      }
      delay_us(50); // Gi? delay này d? tránh quá t?i
   }
   if (valid_reads > 0) {
       return sum / valid_reads;
   } else {
       return 0; // Tr? v? 0 n?u không có l?n d?c h?p l? nào
   }
}

// Hàm l?y giá tr? (thô - offset)
long hx711_get_value(int8 times) {
   long raw_value = readAverage();
   long delta = raw_value - OFFSET;

   // L?c nhi?u RAW r?t nh?, không ép v? 0g ? dây
   if (delta < HX711_RAW_NOISE_THRESHOLD && delta > -HX711_RAW_NOISE_THRESHOLD) {
       // Ch? dùng d? ?n d?nh tín hi?u n?i b?, không ?nh hu?ng d?n logic hi?n th? 0g
   }
   return delta;
}

// Hàm chính d? l?y tr?ng lu?ng tính b?ng gram
float hx711_get_units(int8 times) {
   float current_weight_raw = (float)hx711_get_value(times); // L?y giá tr? thô dã tr? offset

   if (SCALE == 0) return 0;
   current_weight_raw = current_weight_raw / SCALE;

   // Ð?m b?o không hi?n th? giá tr? âm n?u nó không ph?i là tr?ng lu?ng th?c s? âm
   if (current_weight_raw < 0 && fabs(current_weight_raw) < HX711_NEAR_ZERO_THRESHOLD) {
       current_weight_raw = 0;
   }

   switch (hx711_current_state) {
       case HX711_STATE_UNKNOWN:
           // Kh?i t?o tr?ng thái, gi? d?nh ban d?u là 0g và b?t d?u quá trình ?n d?nh
           zero_stability_counter = 0;
           hx711_current_state = HX711_STATE_SETTLING_TO_ZERO;
           return 0; // Hi?n th? 0 ngay l?p t?c khi kh?i d?ng
           break;

       case HX711_STATE_ZEROED: // Cân dang du?c coi là 0g và b? khóa ? 0
           // Ch? thoát kh?i tr?ng thái 0g khi phát hi?n m?t tr?ng lu?ng ÐÁNG K?
           if (fabs(current_weight_raw) >= HX711_OBJECT_DETECTION_THRESHOLD) {
               hx711_current_state = HX711_STATE_MEASURING; // Chuy?n sang tr?ng thái do lu?ng
               zero_stability_counter = 0; // Reset b? d?m ?n d?nh
               return current_weight_raw;
           } else {
               return 0.0f; // V?n hi?n th? 0g
           }
           break;

       case HX711_STATE_MEASURING: // Cân dang do lu?ng tr?ng lu?ng
           // N?u giá tr? hi?n t?i r?t nh? (g?n 0g), b?t d?u quá trình ?n d?nh v? 0
           if (fabs(current_weight_raw) < HX711_NEAR_ZERO_THRESHOLD) {
               zero_stability_counter = 0; // B?t d?u d?m l?i
               hx711_current_state = HX711_STATE_SETTLING_TO_ZERO;
               return current_weight_raw; // V?n hi?n th? giá tr? nh? dó trong lúc ch? ?n d?nh
           } else {
               // N?u giá tr? v?n dáng k?, ti?p t?c do lu?ng
               return current_weight_raw;
           }
           break;

       case HX711_STATE_SETTLING_TO_ZERO: // Cân dang trong quá trình ?n d?nh d? v? 0
           // Ki?m tra xem giá tr? có n?m trong ngu?ng g?n 0 không
           if (fabs(current_weight_raw) < HX711_NEAR_ZERO_THRESHOLD) {
               zero_stability_counter++;
               if (zero_stability_counter >= HX711_STABLE_ZERO_COUNT) {
                   // Ðã ?n d?nh d? lâu ? g?n 0g, th?c hi?n Tare t? d?ng và khóa ? 0g
                   OFFSET = readAverage(); // T? d?ng c?p nh?t offset
                   hx711_current_state = HX711_STATE_ZEROED;
                   zero_stability_counter = 0; // Reset b? d?m
                   return 0.0f; // Ch?c ch?n v? 0g
               } else {
                   // Chua ?n d?nh d?, v?n hi?n th? giá tr? hi?n t?i (có th? là nh?, rung)
                   return 0.0f; // Ép v? 0 trong quá trình settling d? tránh nh?y s? nh?
               }
           } else if (fabs(current_weight_raw) >= HX711_OBJECT_DETECTION_THRESHOLD) {
               // N?u d?t nhiên có v?t l?n d?t lên trong khi dang settling, chuy?n sang do
               hx711_current_state = HX711_STATE_MEASURING;
               zero_stability_counter = 0;
               return current_weight_raw;
           }
           else {
               // N?u giá tr? n?m ngoài ngu?ng NEAR_ZERO nhung chua d? l?n d? DETECT_OBJECT
               // và không ph?i là nhi?u, thì v?n là do lu?ng
               zero_stability_counter = 0; // Reset counter vì không ?n d?nh v? 0
               hx711_current_state = HX711_STATE_MEASURING; // Quay l?i tr?ng thái do
               return current_weight_raw;
           }
           break;

       default:
           return 0; // Tru?ng h?p không xác d?nh
   }
}

// Hàm tare (d?t tr?ng lu?ng hi?n t?i v? 0)
void hx711_tare(int8 times) {
   OFFSET = readAverage();
   hx711_current_state = HX711_STATE_ZEROED; // Ð?t tr?ng thái v? 0g và khóa l?i
   zero_stability_counter = 0; // Reset b? d?m
}

// Hàm d?t h? s? scale th? công
void hx711_set_scale(double scale) {
   SCALE = scale;
}

// Hàm hi?u chu?n HX711 v?i tr?ng lu?ng dã bi?t
void hx711_calibrate(float known_weight) {
   if (known_weight <= 0) return;

   long raw_value_with_weight = readAverage();
   long delta_raw = raw_value_with_weight - OFFSET;

   if (delta_raw != 0) {
      SCALE = (double)delta_raw / known_weight;
   }
   // Sau khi hi?u chu?n, chúng ta không t? d?ng v? 0g
   // Tr?ng thái s? du?c qu?n lý b?i hx711_get_units
}

#endif // HX711_H
